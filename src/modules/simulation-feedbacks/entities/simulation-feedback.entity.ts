import { Column, CreateDateColumn, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn } from 'typeorm';
import { SimulationSession } from '../../simulation-sessions/entities/simulation-session.entity';

/**
 * SimulationFeedback entity
 * Represents feedback generated for a simulation session
 */
@Entity('simulation_feedbacks')
export class SimulationFeedback {
  /**
   * Primary key - UUID v4
   */
  @PrimaryGeneratedColumn('uuid')
  id: string;

  /**
   * Reference to the simulation session
   */
  @OneToOne(() => SimulationSession, (session) => session.feedback)
  @JoinColumn({ name: 'session_id' })
  session: SimulationSession;

  /**
   * Session ID foreign key
   */
  @Column({ name: 'session_id', type: 'uuid', unique: true })
  sessionId: string;

  /**
   * Feedback text generated by GPT
   */
  @Column({ name: 'feedback_text', type: 'text', nullable: true })
  feedbackText: string | null;

  /**
   * Checklist data in JSON format
   */
  @Column({ name: 'checklist_json', type: 'jsonb', nullable: true })
  checklistJson: Record<string, any> | null;

  /**
   * Creation timestamp
   */
  @CreateDateColumn({ name: 'created_at', type: 'timestamptz' })
  createdAt: Date;
} 