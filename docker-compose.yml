version: '3.8'

services:
  # NestJS application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aide-simulation-api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-super-secret-key-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - API_PREFIX=${API_PREFIX:-api}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-aide_simulation}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CACHE_TTL=${CACHE_TTL:-3600}
      - GRPC_AIDE_BACKEND_HOST=${GRPC_AIDE_BACKEND_HOST:-localhost}
      - GRPC_AIDE_BACKEND_PORT=${GRPC_AIDE_BACKEND_PORT:-50051}
    depends_on:
      - postgres
      - redis
    networks:
      - aide-network
    volumes:
      - ./src:/app/src
      - ./node_modules:/app/node_modules

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: aide-simulation-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-aide_simulation}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aide-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: aide-simulation-redis
    restart: unless-stopped
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass ${REDIS_PASSWORD}}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - aide-network

volumes:
  postgres_data:
  redis_data:

networks:
  aide-network:
    driver: bridge 